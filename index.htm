<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
  <title>退料多功能轉換工具</title>
  <style>
    body {
      font-family: "Microsoft JhengHei", sans-serif;
      background: #f5f5f5;
      padding: 2rem;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
    }
    .container {
      width: 100%;
      max-width: 400px;
      background: white;
      padding: 2rem 2.5rem;
      border-radius: 12px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
      box-sizing: border-box;
      position: relative; /* 使彈窗相對於容器定位 */
    }
    h2 {
      text-align: center;
      margin-bottom: 1.5rem;
      color: #222;
    }
    .tab-buttons {
      display: flex;
      flex-wrap: wrap;     /* 允許換行 */
      gap: 8px;            /* 按鈕間距 */
      align-items: center;
      justify-content: flex-start;
      margin-bottom: 20px;
    }
    .tab-buttons button {
      flex: 1 1 auto;      /* 讓按鈕寬度彈性 */
      min-width: 80px;     /* 按鈕最小寬度 */
      padding: 8px 12px;
      border: 2px solid #4CAF50;
      background-color: white;
      color: #4CAF50;
      border-radius: 5px;
      cursor: pointer;
      white-space: nowrap; /* 按鈕文字不換行 */
      transition: background-color 0.3s, color 0.3s;
    }
    .tab-buttons button.active {
      background-color: #4CAF50;
      color: white;
    }
    label {
      display: block;
      margin-top: 1rem;
      font-weight: 600;
      color: #444;
    }
    input[type=number] {
      width: 100%;
      padding: 0.5rem 0.75rem;
      margin-top: 0.25rem;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 1rem;
      box-sizing: border-box;
      transition: border-color 0.3s;
    }
    input[type=number]:focus {
      outline: none;
      border-color: #4CAF50;
      box-shadow: 0 0 6px #4CAF50aa;
    }
    button {
      margin-top: 15px;
      padding: 12px;
      font-size: 16px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      width: 48%;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #3a9d3a;
    }
    .result {
      margin-top: 20px;
      background: #e8f5e9;
      border: 2px solid #4CAF50;
      border-radius: 5px;
      padding: 15px;
      font-size: 16px;
      color: #2e7d32;
      white-space: pre-line;
    }
    .readonly {
      background-color: #f4f4f4;
    }
    .button-group {
      display: flex;
      justify-content: space-between;
      gap: 10px;
      flex-wrap: wrap;
    }
    .checkbox-group {
      display: flex;
      flex-wrap: nowrap;
      gap: 12px;
      margin-top: 4px;
      align-items: center;
    }
    .checkbox-option {
      display: flex;
      align-items: center;
      gap: 4px;
      white-space: nowrap;
      font-size: 14px;
      color: #555;
    }
    input[type="checkbox"] {
      transform: scale(1.2);
      margin-top: 0;
      vertical-align: middle;
    }
    @media (max-width: 480px) {
      button {
        width: 48%;
        margin-top: 9px;
      }
      .button-group {
        flex-direction: row;
        gap: 10px;
        justify-content: space-between;
      }
    }

    /* 以下是新增彈窗樣式 */
    #coreWeightModal,
    #logicModal {
      display: none; 
      position: fixed;
      z-index: 9999;
      left: 0; top: 0; width: 100%; height: 100%;
      background-color: rgba(0,0,0,0.4);
      overflow: auto;
    }
    #coreWeightModalContent,
    #logicModalContent {
      background-color: white;
      margin: 8% auto;
      padding: 20px;
      border-radius: 8px;
      max-width: 600px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.3);
    }
    #coreWeightModalContent table,
    #logicModalContent table {
      width: 100%;
      border-collapse: collapse;
    }
    #coreWeightModalContent th,
    #coreWeightModalContent td,
    #logicModalContent th,
    #logicModalContent td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: center;
      cursor: pointer;
      user-select: none;
    }
    #coreWeightModalContent th,
    #logicModalContent th {
      background-color: #4CAF50;
      color: white;
    }
    #coreWeightModalClose,
    #logicModalClose {
      float: right;
      font-size: 18px;
      font-weight: bold;
      color: #999;
      cursor: pointer;
    }
    #coreWeightModalClose:hover,
    #logicModalClose:hover {
      color: #444;
    }
    #coreWeightModalContent td:hover,
    #logicModalContent td:hover {
      background-color: #e0f2e9;
    }

    /* 新增邏輯內容樣式 */
    .logic-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    .logic-table th, .logic-table td {
      border: 1px solid #ccc;
      padding: 10px;
      text-align: left;
    }
    .logic-table th {
      background-color: #4CAF50;
      color: white;
    }
    .logic-table tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    
    /* 浮動計算機格子容器 */
    #calculator {
        display: none;
        position: fixed;
        top: 80px;
        left: 50%;
        transform: translateX(-50%);
        background: white;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        z-index: 10000;
        min-width: 220px;
        max-width: 280px; /* 限制最大寬度 */
        box-sizing: border-box;
    }

    #calcHeader {
        cursor: move;
        background: #f0f0f0;
        padding: 5px;
        border-radius: 8px 8px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: bold;
        font-size: 14px;
    }

    #calcDisplay {
        width: 100%;
        margin-top: 5px;
        height: 40px;
        text-align: right;
        font-size: 16px;
        padding: 5px;
        border-radius: 5px;
        border: 1px solid #ccc;
        font-weight: bold;
        box-sizing: border-box;  /* 確保padding不會讓寬度超出 */
        overflow-x: auto; /* 防止內容溢出時出現滾動 */
    }

    #closeCalcBtn {
        border: none;
        background: transparent;
        font-size: 25px;
        cursor: pointer;
        color: #444444; /* 深灰色 */
        font-weight: bold;
    }

    .calc-btn {
        font-weight: bold;
        font-size: 14px;
        padding: 14px 0;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
        cursor: pointer;
        user-select: none;
        background-color: white;
        color: black; /* 按鈕字體黑色 */
        transition: background-color 0.3s;
    }

    .calc-btn:hover {
        background-color: #e0f2e9;
    }

    #clearCalc {
        font-weight: bold;
        font-size: 14px;
        padding: 14px 0;
        cursor: pointer;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: white;
        color: black; /* 按鈕字體黑色 */
        transition: background-color 0.3s;
    }

    #clearCalc:hover {
        background-color: #e0f2e9;
    }

    #equalCalc {
        grid-column: span 4;
        background: #4CAF50;
        color: white;
        font-weight: bold;
        font-size: 14px;
        padding: 14px 0;
        border-radius: 5px;
        cursor: pointer;
        border: none;
        user-select: none;
        transition: background-color 0.3s;
    }

    #equalCalc:hover {
        background-color: #3a9d3a;
    }

    div[style*="display:grid"] {
        grid-template-columns: repeat(4, 1fr);
        gap: 5px;
    }
  </style>
  <script>
    // 禁止雙擊放大
    document.addEventListener('dblclick', function(e) {
      e.preventDefault();
    }, { passive: false });

    // 禁止多指縮放
    document.addEventListener('touchstart', function(e) {
      if (e.touches.length > 1) {
        e.preventDefault();
      }
    }, { passive: false });
  </script>
</head>



<div class="container">

  <div class="tab-buttons">
    <button onclick="showTab('returnCalculator')" class="active">退料</button> <!-- 新退料按鈕 -->
    <button onclick="showTab('prepCalculator')">數量</button> <!-- 新增數量按鈕 -->
    <button id="openLogicBtn" onclick="openLogicModal()">邏輯表</button> <!-- 新增邏輯表按鈕 -->
    <button id="openCalcBtn">計算機</button> <!-- 新增計算機按鈕 -->
  </div>


    <!-- 退料換算 -->
    <div id="returnCalculator">
        <h2>退料</h2>
        <label>原始重量：
            <input type="number" id="totalWeight" step="any" min="0" placeholder="請輸入原始重量" oninput="calculateRightAuto()">
        </label>
        <label style="display: block; margin-top: 1rem; font-weight: 600; color: #444;">
          軸心重量：
        </label>
        <input
          type="number"
          id="coreWeight"
          step="any"
          min="0"
          placeholder="請輸入軸心重量"
          oninput="calculateRightAuto()"
          style="width: 100%; max-width: 200px; margin-top: 4px;"
        />
        <button
          type="button"
          id="openCoreWeightBtn"
          onclick="openCoreWeightModal()"
          style="
            margin-top: 8px;
            font-weight: 600;
            color: #4CAF50;
            border: 1px solid #4CAF50;
            border-radius: 4px;
            background: white;
            padding: 6px 10px !important;   /* 縮小左右內距 */
            cursor: pointer;
            min-width: 0 !important;        /* 取消最小寬度 */
            width: auto;                    /* 讓寬度自適應文字 */
          "
        >
          軸心表
        </button>

        <label>原始捲數：
            <input type="number" id="originalRolls" min="0" placeholder="請輸入原始單捲數量" oninput="calculateRightAuto()">
        </label>
        <label>退料重量：
            <input type="number" id="returnWeight" step="any" min="0" placeholder="請輸入實際退料重量" oninput="calculateRightAuto()">
        </label>
        <label>換算貼紙張數：
            <input type="number" id="calculatedResult" class="readonly" readonly>
        </label>
        <label>貼紙備料數：
            <input type="number" id="prepared1" min="0" placeholder="請輸入備料數量" oninput="updatePreparedTotal()">
            <span class="checkbox-group">
                <label class="checkbox-option"><input type="checkbox" id="x2Toggle"> ｘ2</label>
                <label class="checkbox-option"><input type="checkbox" id="x12Toggle"> ｘ12　（特殊種類使用）</label>
            </span>
        </label>

        <label>貼紙備料數（跨批號）：
            <input type="number" id="prepared2" min="0" placeholder="請輸入跨批號備料數量" oninput="updatePreparedTotal()">
        </label>
        <label>貼紙備料總數：
            <input type="number" id="preparedTotal" class="readonly" readonly>
        </label>
        <label>工單製令數：
            <input type="number" id="workOrder" min="0" placeholder="請輸入工單製令數">
        </label>
        
        <label>實際退料數：
            <input type="number" id="actualReturn" class="readonly" readonly>
            <span class="checkbox-group">
                <label class="checkbox-option"><input type="checkbox" id="manualToggle" onclick="toggleManualInput()"> 勾選可自行輸入</label>
            </span>
        </label>

        <label>藍單退料數：
            <input type="number" id="blueReturn" min="0" placeholder="請輸入藍單料數">
        </label>

        <div class="button-group">
            <button onclick="calculateLeft()">計算</button>
            <button onclick="clearAll()">清除</button>
        </div>

        <div class="result" id="leftResult" style="display:none;"></div>
    </div>

    <!-- 數量換算 -->
    <div id="prepCalculator" style="display:none;">
        <h2>收貨/備料/回算多功能轉換</h2>
        <label for="total">數量：</label>
        <input type="number" id="total" min="1" placeholder="請輸入總數量" />

        <label for="prep">備料數量：</label>
        <input type="number" id="prep" min="0" placeholder="請輸入備料數量" />

        <label for="unit">單位：</label>
        <input type="number" id="unit" min="1" placeholder="請輸入每箱單位" oninput="updateBoxCountResult()"/>

        <label for="perPallet">板數：</label>
        <input type="number" id="perPallet" min="1" placeholder="請輸入每板單位" oninput="updateBoxCountResult()"/>

        <div class="buttons">
            <label for="boxCount">板箱數：</label>
            <input type="number" id="boxCount" min="1" placeholder="請輸入每板箱數" oninput="updateBoxCountResult()">
            
            <!-- 滿板數量顯示區域，初始隱藏 -->
            <div id="boxCountDisplay" style="margin-top: 0.5rem; color: #444; display: none;">
                滿板數量：<span id="boxCountResult">0</span>
            </div>

            <div class="buttons">
                <button id="clear" onclick="clearFields()" style="width: 100%;">清除</button>
                <div id="result" class="result" style="display:none;"></div>
            </div>
        </div>
    </div>

    <!-- 軸心重量參考表彈窗 -->
    <div id="coreWeightModal" style="display:none; position:fixed; z-index:9999; left:0;top:0;width:100%;height:100%;background-color:rgba(0,0,0,0.4); overflow:auto;">
      <div id="coreWeightModalContent" style="background:#fff; margin:8% auto; padding:20px; border-radius:8px; max-width:600px; box-shadow:0 4px 10px rgba(0,0,0,0.3);">
        <span id="coreWeightModalClose" onclick="closeCoreWeightModal()" style="float:right; font-size:22px; font-weight:bold; cursor:pointer;">&times;</span>
        <h3>軸心重量參考表</h3>
        <table style="width:100%; border-collapse:collapse; margin-top:10px;">
          <thead>
            <tr style="background:#4CAF50; color:#fff;">
              <th style="padding:8px; border:1px solid #ddd;">重量</th>
              <th style="padding:8px; border:1px solid #ddd;">適用產品</th>
            </tr>
          </thead>
          <tbody>     
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.015g</td>
              <td style="padding:8px; border:1px solid #ddd;">PRO260ml瓶身貼</td>   
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.035g</td>
              <td style="padding:8px; border:1px solid #ddd;">護髮油100ml/PRO260ml封口貼</td>
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.28g</td>
              <td style="padding:8px; border:1px solid #ddd;">SERUM 1ml / ESSENCE 1ml / CONCENTRATE 1ml / HAIR OIL 1ml / 香檳玫瑰精油 1ml / 山茶花菁萃油 1ml / 紫玫瑰油 1ml / RECOFFEE 1ml</td>
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.30g</td>
              <td style="padding:8px; border:1px solid #ddd;">RICH 5ml / LIGHT 5ml</td>
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.32g</td>
              <td style="padding:8px; border:1px solid #ddd;">CLEANSER 2ml</td>
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.42g</td>
              <td style="padding:8px; border:1px solid #ddd;">TESTER 10ml</td>
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.65g</td>
              <td style="padding:8px; border:1px solid #ddd;">N/A</td>
            </tr>
            <tr>
              <td style="padding:8px; border:1px solid #ddd; cursor:pointer; color:#2E7D32; font-weight:600;">0.72g</td>
              <td style="padding:8px; border:1px solid #ddd;">TREATMENT 70ml / BAMBOO 70ml / ROSE 70ml / TESTER 70ml</td>
            </tr>
          </tbody>
        </table>
        <p style="font-size:12px; color:#666; margin-top:10px;">點擊「單位」欄的數值可直接帶入軸心重量欄</p>
      </div>
    </div>

    <style>
        .logic-table th {
            background-color: #4CAF50;
            color: white;
            text-align: center; /* 標題置中 */
        }
        .logic-table td {
            text-align: left; /* 內容靠左 */
            vertical-align: top; /* 讓內容在單元格內部靠上 */
        }
        #logicModalContent {
            text-align: left; /* 整個彈窗內容靠左 */
        }
    </style>

    <!-- 退料邏輯彈窗 -->
    <div id="logicModal" style="display:none; position:fixed; z-index:9999; left:0;top:0;width:100%;height:100%;background-color:rgba(0,0,0,0.4); overflow:auto;">
        <div id="logicModalContent" style="background:#fff; margin:8% auto; padding:20px; border-radius:8px; max-width:800px; box-shadow:0 4px 10px rgba(0,0,0,0.3);">
            <span id="logicModalClose" onclick="closeLogicModal()" style="float:right; font-size:22px; font-weight:bold; cursor:pointer;">&times;</span>
            <h3>退料邏輯</h3>
            <table class="logic-table">
                <thead>
                    <tr>
                        <th>貼紙退料單算法流程</th>
                        <th>藍單寫退料數</th>
                        <th>藍單沒寫退料數</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>第一種<br>實際退料數量大於應退料數</td>
                        <td>
                            藍單良品:YES(實際退料數-應退料數)<br>
                            藍單不良品:YES(藍單退料數-藍單良品)
                        </td>
                        <td>
                            
                        </td>
                    </tr>
                    <tr>
                        <td>第二種<br>實際退料數量小於應退料數</td>
                        <td>
                            領料單:YES(應退料數-退料數)<br>
                            藍單不良:YES(藍單退料數+領料單數)
                        </td>
                        <td>
                            領料單:YES(應退料數-退料數)<br>
                            藍單不良:YES(同領料單數)
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>上方如沒顯示即不需填寫資料，領料單如無顯示則需填入0<h3>
            <hr>

            <h3>貼紙換算步驟</h3>
            <p>
              1. 原始總重 - 軸心重 = X<br>
              2. 原始捲數 / X = Y<br>
              3. 退料重量 - 軸心重 = Z<br>
              4. Z * Y = 實際張數
            </p>
            <hr>
              
            <h3>重點須知</h3>
            <p>
              1.藍單不良品數：藍單退料數 + 領料數 (實際退料數大於應退料數的差值)
            </p>
        </div>
    </div>

    <script>
        document.getElementById('openCoreWeightBtn').addEventListener('click', () => {
            document.getElementById('coreWeightModal').style.display = 'block';
        });

        function closeCoreWeightModal() {
            document.getElementById('coreWeightModal').style.display = 'none';
        }

        document.getElementById('openLogicBtn').addEventListener('click', () => {
            document.getElementById('logicModal').style.display = 'block';
        });

        function closeLogicModal() {
            document.getElementById('logicModal').style.display = 'none';
        }

        document.addEventListener('DOMContentLoaded', () => {
            const modal = document.getElementById('coreWeightModal');
            modal.querySelectorAll('tbody td:nth-child(1)').forEach(td => {
                td.addEventListener('click', () => {
                    let val = td.textContent.trim();
                    val = val.replace('g',''); // 去掉 g
                    const numVal = parseFloat(val) || '';
                    document.getElementById('coreWeight').value = numVal;
                    closeCoreWeightModal();
                    if(typeof calculateRightAuto === 'function') calculateRightAuto();
                });
            });
        });
    </script>

    <script>

document.addEventListener('DOMContentLoaded', function() {
    const openBtn = document.getElementById('openCalcBtn');
    const closeBtn = document.getElementById('closeCalcBtn');
    const calc = document.getElementById('calculator');
    const display = document.getElementById('calcDisplay');
    const buttons = document.querySelectorAll('.calc-btn');
    const clearBtn = document.getElementById('clearCalc');
    const equalBtn = document.getElementById('equalCalc');
    const header = document.getElementById('calcHeader');

    // 開啟計算機
    openBtn.addEventListener('click', () => {
        calc.style.display = 'block';
    });

    // 關閉計算機
    closeBtn.addEventListener('click', () => {
        calc.style.display = 'none';
    });

    // 按鍵輸入
    buttons.forEach(btn => {
        btn.addEventListener('click', () => {
            display.value += btn.textContent;
        });
    });

    // 清除
    clearBtn.addEventListener('click', () => {
        display.value = '';
    });

    // 計算結果
    equalBtn.addEventListener('click', () => {
        try {
            display.value = eval(display.value) || '';
        } catch {
            display.value = 'Error';
        }
    });

    // 拖動功能（滑鼠 & 觸控）
    let isDragging = false;
    let offsetX, offsetY;

    const startDrag = (x, y) => {
        isDragging = true;
        const rect = calc.getBoundingClientRect();
        offsetX = x - rect.left;
        offsetY = y - rect.top;
    };

    const doDrag = (x, y) => {
        if (!isDragging) return;
        calc.style.left = `${x - offsetX}px`;
        calc.style.top = `${y - offsetY}px`;
        calc.style.transform = 'none';
    };

    const stopDrag = () => { isDragging = false; };

    // 滑鼠事件
    header.addEventListener('mousedown', e => startDrag(e.clientX, e.clientY));
    document.addEventListener('mousemove', e => doDrag(e.clientX, e.clientY));
    document.addEventListener('mouseup', stopDrag);

    // 觸控事件
    header.addEventListener('touchstart', e => {
        const t = e.touches[0];
        startDrag(t.clientX, t.clientY);
    });
    document.addEventListener('touchmove', e => {
        const t = e.touches[0];
        doDrag(t.clientX, t.clientY);
    });
    document.addEventListener('touchend', stopDrag);
});

        // 切換標籤顯示
        function showTab(tabId) {
            const tabs = ['prepCalculator', 'returnCalculator'];
            tabs.forEach(id => {
                document.getElementById(id).style.display = (id === tabId) ? 'block' : 'none';
            });

            const tabName = tabId === 'prepCalculator' ? '數量' : '退料';
            document.querySelectorAll('.tab-buttons button').forEach(btn => {
                btn.classList.toggle('active', btn.textContent.includes(tabName));
            });
        }

        // 初始顯示介面
        showTab('returnCalculator');

        // 數量換算邏輯
        const totalInput = document.getElementById('total');
        const prepInput = document.getElementById('prep');
        const unitInput = document.getElementById('unit');
        const perPalletInput = document.getElementById('perPallet');
        const resultDiv = document.getElementById('result');

        totalInput.addEventListener('input', updateResult);
        prepInput.addEventListener('input', updateResult);
        unitInput.addEventListener('input', updateResult);
        perPalletInput.addEventListener('input', updateResult);

        function clearFields() {
            totalInput.value = '';
            prepInput.value = '';
            unitInput.value = '';
            perPalletInput.value = '';
            const boxCountInput = document.getElementById('boxCount');
            boxCountInput.value = '';
            document.getElementById('boxCountResult').textContent = '0';
            document.getElementById('boxCountDisplay').style.display = 'none';

            resultDiv.textContent = '';
            resultDiv.style.display = 'none';
        }

        function updateBoxCountResult() {
            const unit = parseInt(unitInput.value) || 0;
            const boxCount = parseInt(document.getElementById('boxCount').value) || 0;
            const result = unit * boxCount;
            document.getElementById('boxCountResult').textContent = result;

            if (unit > 0 && boxCount > 0) {
                document.getElementById('boxCountDisplay').style.display = 'block';
            } else {
                document.getElementById('boxCountDisplay').style.display = 'none';
            }

            updateResult();
        }

        function updateResult() {
            const total = parseInt(totalInput.value);
            const prep = prepInput.value === '' ? null : parseInt(prepInput.value);
            const unit = unitInput.value === '' ? null : parseInt(unitInput.value);
            const perPallet = perPalletInput.value === '' ? null : parseInt(perPalletInput.value);

            resultDiv.textContent = '';

            if (isNaN(total) || total <= 0) {
                resultDiv.textContent = '請輸入有效的數量（總數），且必須大於0';
                return;
            }

            if (prep !== null && prep > total) {
                resultDiv.textContent = '備料數量不能大於總數量';
                return;
            }

            let result = '';
            let remaining = 0;

            if (prep === null && unit === null && perPallet === null) {
                result = `庫存數量：${total}支`;
            } 
            else if (prep !== null && unit === null && perPallet === null) {
                const stock = total - prep;
                result = `庫存數量：${formatResult(0, 0, stock)}`;
            } 
            else if (unit !== null && prep === null && perPallet === null) {
                const boxes = Math.floor(total / unit);
                const units = total % unit;
                result = `庫存數量：${formatResult(0, boxes, units)} (${total})`;
            } 
            else if (perPallet !== null && prep === null && unit === null) {
                const pallets = Math.floor(total / perPallet);
                const remain = total % perPallet;
                result = `庫存數量：${formatResult(pallets, 0, remain)} (${total})`;
            } 
            else if (prep !== null && unit !== null && perPallet === null) {
                const stock = total - prep;
                const prepBoxes = Math.floor(prep / unit);
                const prepUnits = prep % unit;
                const stockBoxes = Math.floor(stock / unit);
                const stockUnits = stock % unit;

                if (prep > 0) {
                    result = `備料數量：${formatResult(0, prepBoxes, prepUnits)} (${prep})<br>庫存數量：${formatResult(0, stockBoxes, stockUnits)} (${stock})`;
                } else {
                    result = `庫存數量：${formatResult(0, stockBoxes, stockUnits)} (${stock})`;
                }
                remaining = stock;
            } 
            else if (prep !== null && perPallet !== null && unit === null) {
                const stock = total - prep;
                const prepPallets = Math.floor(prep / perPallet);
                const prepRemain = prep % perPallet;
                const stockPallets = Math.floor(stock / perPallet);
                const stockRemain = stock % perPallet;

                if (prep > 0) {
                    result = `備料數量：${formatResult(prepPallets, 0, prepRemain)} (${prep})<br>庫存數量：${formatResult(stockPallets, 0, stockRemain)} (${stock})`;
                } else {
                    result = `庫存數量：${formatResult(stockPallets, 0, stockRemain)} (${stock})`;
                }
                remaining = stock;
            } 
            else if (unit !== null && perPallet !== null && prep === null) {
                const pallets = Math.floor(total / perPallet);
                const remain = total % perPallet;
                const boxes = Math.floor(remain / unit);
                const units = remain % unit;

                result = `庫存數量：${formatResult(pallets, boxes, units)} (${total})`;
            } 
            else if (prep !== null && unit !== null && perPallet !== null) {
                const stock = total - prep;
                const prepPallets = Math.floor(prep / perPallet);
                const prepRemain = prep % perPallet;
                const prepBoxes = Math.floor(prepRemain / unit);
                const prepUnits = prepRemain % unit;

                const stockPallets = Math.floor(stock / perPallet);
                const stockRemain = stock % perPallet;
                const stockBoxes = Math.floor(stockRemain / unit);
                const stockUnits = stockRemain % unit;

                if (prep > 0) {
                    result = `備料數量：${formatResult(prepPallets, prepBoxes, prepUnits)} (${prep})<br>庫存數量：${formatResult(stockPallets, stockBoxes, stockUnits)} (${stock})`;
                } else {
                    result = `庫存數量：${formatResult(stockPallets, stockBoxes, stockUnits)} (${stock})`;
                }
                remaining = stock;
            }

            resultDiv.innerHTML = result;
            resultDiv.style.display = 'block';
        }

        function formatResult(pallets, boxes, units) {
            let result = '';
            if (pallets > 0) result += `${pallets}板 `;
            if (boxes > 0) result += `${boxes}箱 `;
            if (units > 0) result += `${units}支`;
            return result.trim();
        }

        function updatePreparedTotal() {
            const p1 = parseInt(document.getElementById('prepared1').value) || 0;
            const p2 = parseInt(document.getElementById('prepared2').value) || 0;
            document.getElementById('preparedTotal').value = p1 + p2;
        }

        // 退料計算邏輯
        function calculateRightAuto() {
            const totalWeight = parseFloat(document.getElementById('totalWeight').value) || 0;
            const coreWeight = parseFloat(document.getElementById('coreWeight').value) || 0;
            const originalRolls = parseInt(document.getElementById('originalRolls').value) || 0;
            const returnWeight = parseFloat(document.getElementById('returnWeight').value) || 0;
            const manualMode = document.getElementById('manualToggle').checked;

            if (totalWeight <= coreWeight || originalRolls <= 0 || returnWeight < coreWeight) {
                document.getElementById('calculatedResult').value = '';
                if (!manualMode) {
                    document.getElementById('actualReturn').value = '';
                }
                return;
            }

            const val1 = totalWeight - coreWeight;
            const val2 = originalRolls / val1;
            const rawResult = (returnWeight - coreWeight) * val2;
            const fractional = rawResult % 1;
            const finalResult = fractional > 0 ? Math.ceil(rawResult) : rawResult;

            document.getElementById('calculatedResult').value = finalResult;
            if (!manualMode) {
                document.getElementById('actualReturn').value = finalResult;
            }
        }

        function toggleManualInput() {
            const checkbox = document.getElementById('manualToggle');
            const actualInput = document.getElementById('actualReturn');

            if (checkbox.checked) {
                actualInput.removeAttribute('readonly');
                actualInput.classList.remove('readonly');
            } else {
                actualInput.setAttribute('readonly', true);
                actualInput.classList.add('readonly');
                calculateRightAuto();
            }
        }

        function calculateLeft() {
            const prepared = parseInt(document.getElementById('preparedTotal').value) || 0;
            const workOrder = parseInt(document.getElementById('workOrder').value) || 0;
            const manualMode = document.getElementById('manualToggle').checked;
            let actualReturn = parseInt(document.getElementById('actualReturn').value) || 0;
            const blueReturnInput = parseInt(document.getElementById('blueReturn').value) || 0;
            const x2Checked = document.getElementById('x2Toggle').checked;
            const x12Checked = document.getElementById('x12Toggle').checked;

            const blueReturn = x2Checked ? blueReturnInput * 2 : blueReturnInput;

            const blueReturnX12 = x12Checked ? blueReturnInput * 12 : blueReturn;

            const shouldReturn = prepared - workOrder;
            let goodReturn = 0, badReturn = 0, requirePick = 0, giftReturn = 0;

            if (actualReturn > shouldReturn) {
                goodReturn = actualReturn - shouldReturn;
                if (goodReturn > blueReturnX12) {
                    giftReturn = goodReturn - blueReturnX12;
                    goodReturn = blueReturnX12;
                    badReturn = 0;
                } else {
                    badReturn = blueReturnX12 - goodReturn;
                }
            } else if (actualReturn < shouldReturn) {
                requirePick = shouldReturn - actualReturn;
                badReturn = blueReturnX12 + requirePick;
            } else {
                badReturn = blueReturnX12;
            }

            requirePick = Math.max(requirePick, 0);
            goodReturn = Math.max(goodReturn, 0);
            badReturn = Math.max(badReturn, 0);
            giftReturn = Math.max(giftReturn, 0);

            const outputLines = [
                `領料單: ${requirePick}`,
                `藍單良品: ${goodReturn}`,
                `藍單不良品: ${badReturn}`
            ];

            if (giftReturn > 0) {
                outputLines.push(`贈品: ${giftReturn}    如果多太多就入進去`);
            }

            const leftResultDiv = document.getElementById('leftResult');
            leftResultDiv.textContent = outputLines.join('\n');
            leftResultDiv.style.display = 'block';
        }

        function clearAll() {
            const inputs = document.querySelectorAll('input[type=number]');
            inputs.forEach(input => {
                input.value = '';
            });
            document.getElementById('manualToggle').checked = false;
            document.getElementById('actualReturn').setAttribute('readonly', true);
            document.getElementById('actualReturn').classList.add('readonly');
            document.getElementById('x2Toggle').checked = false;
            document.getElementById('x12Toggle').checked = false;
            document.getElementById('leftResult').style.display = 'none';
        }

        // === 新增軸心重量參考表彈窗控制 ===
        const modal = document.getElementById('coreWeightModal');
        const modalContent = document.getElementById('coreWeightModalContent');

        function openCoreWeightModal() {
          modal.style.display = 'block';
        }

        function closeCoreWeightModal() {
          modal.style.display = 'none';
        }

        // 點擊彈窗外區域也關閉
        window.onclick = function(event) {
          if (event.target === modal) {
            closeCoreWeightModal();
          }
        };

        // 點擊表格重量欄，帶入軸心重量輸入框
        modalContent.querySelectorAll('tbody td:nth-child(1)').forEach(cell => {
          cell.addEventListener('click', () => {
            document.getElementById('coreWeight').value = cell.textContent;
            calculateRightAuto();  // 選擇後自動重新計算
            closeCoreWeightModal();
          });
        });

    </script>

</body>

<!-- 浮動計算機 -->
<div id="calculator" style="display:none;position:fixed;top:80px;left:50%;transform:translateX(-50%);
    background:white;padding:10px;border:1px solid #ccc;border-radius:10px;
    box-shadow:0 4px 12px rgba(0,0,0,0.2);z-index:10000;min-width:220px;">

    <div id="calcHeader" style="cursor:move;background:#f0f0f0;padding:5px;border-radius:8px 8px 0 0;
        display:flex;justify-content:space-between;align-items:center;">
        <span>：）</span>
        <button id="closeCalcBtn" style="border:none;background:transparent;font-size:25px;">關閉</button>
    </div>

    <input type="text" id="calcDisplay" readonly 
        style="width:100%;margin-top:5px;height:40px;text-align:right;font-size:18px;padding:5px;border-radius:5px;border:1px solid #ccc;">

    <div style="display:grid;grid-template-columns:repeat(4,1fr);gap:5px;margin-top:10px;">
        <button class="calc-btn">7</button>
        <button class="calc-btn">8</button>
        <button class="calc-btn">9</button>
        <button class="calc-btn">/</button>

        <button class="calc-btn">4</button>
        <button class="calc-btn">5</button>
        <button class="calc-btn">6</button>
        <button class="calc-btn">*</button>

        <button class="calc-btn">1</button>
        <button class="calc-btn">2</button>
        <button class="calc-btn">3</button>
        <button class="calc-btn">-</button>

        <button class="calc-btn">0</button>
        <button class="calc-btn">.</button>
        <button id="clearCalc">C</button>
        <button class="calc-btn">+</button>

        <button id="equalCalc" style="grid-column: span 4;background:#4CAF50;color:white;">=</button>
    </div>
</div>

</html>
